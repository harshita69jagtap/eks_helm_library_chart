apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: dairyqueen-internal
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:793800672737:certificate/9473c6fa-d618-4ea0-b92e-cb20b51d7e4a
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=Production,Team=DevOps
  name: cadence-web
  namespace: dairyqueen
spec:
  rules:
  - host: cadence-web-dq.punchh.com
    http:
      paths:
      - backend:
          serviceName: cadence-web
          servicePort: 80

---

# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/group.name: dairyqueen-internal
#     alb.ingress.kubernetes.io/healthcheck-path: /ping
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:793800672737:certificate/9473c6fa-d618-4ea0-b92e-cb20b51d7e4a
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     alb.ingress.kubernetes.io/scheme: internal
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/tags: Environment=Production,Team=DevOps
#   name: punchh.internal
#   namespace: dairyqueen
# spec:
#   rules:
#   - host: dashboard-rest.punchh.internal
#     http:
#       paths:
#       - backend:
#           serviceName: jbdashboardrest
#           servicePort: 80

#   - host: messaging-rest.punchh.internal
#     http:
#       paths:
#       - backend:
#           serviceName: jbmessagingrest
#           servicePort: 80