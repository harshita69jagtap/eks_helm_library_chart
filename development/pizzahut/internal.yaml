# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/group.name: pizzahut-internal
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:465377470325:certificate/05dc18c5-7cb2-4170-af3b-0c6590149b73
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
#     alb.ingress.kubernetes.io/scheme: internal
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/tags: Environment=Production,Team=DevOps
#   name: cadence-web
#   namespace: pizzahut
# spec:
#   rules:
#   - host: cadence-web.punchhpizzahut.com
#     http:
#       paths:
#       - backend:
#           serviceName: cadence-web
#           servicePort: 80

--- 

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: pizzahut-internal
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:465377470325:certificate/05dc18c5-7cb2-4170-af3b-0c6590149b73
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=Production,Team=DevOps
  name: punchh.internal
  namespace: pizzahut
spec:
  rules:
  - host: dashboard-rest.punchh.internal
    http:
      paths:
      - backend:
          serviceName: jbdashboardrest
          servicePort: 80

  - host: messaging-rest.punchh.internal
    http:
      paths:
      - backend:
          serviceName: jbmessagingrest
          servicePort: 80