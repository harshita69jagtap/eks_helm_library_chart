apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafkaconnect
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/part-of: worker
spec:
  replicas: {{ .Values.kafkaconnect.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.kafkaconnect.maxSurge }}
      maxUnavailable: {{ .Values.kafkaconnect.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/version: {{ .Chart.Version }}
      app.kubernetes.io/part-of: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/part-of: worker
    spec:
      imagePullSecrets:
        - name: {{ .Values.global.common.imagePullSecrets }}
      serviceAccountName: s3-access
      securityContext:
        fsGroup: 1000
      containers:
      - name: kafka-connect
        image: {{ .Values.images.kafkaconnect }}:{{ .Values.tags.kafkaconnect }}
        args:
        - bash
        - -c
        - |
          /etc/confluent/docker/run
        lifecycle:  
          postStart:
            exec:
              command:
                - "sh"
                - "-c" 
                - |
                  source scripts/wait.sh
                  source scripts/configure.sh
                  wait_for_connect
                  configure_connect
        imagePullPolicy: {{ .Values.global.common.pullPolicy }}
        ports:
        - containerPort: 8083
        resources:
          {{- toYaml .Values.kafkaconnect.resources | nindent 12 }}
        env:
{{- range $key, $value := .Values.global.common.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.kafkaconnect.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
{{- end }}
          - name: CONNECT_REST_ADVERTISED_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      nodeSelector:
        node_group_type: worker
